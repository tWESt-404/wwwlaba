from django import forms
from django.core.validators import validate_email
from django.core.exceptions import ValidationError
from .models import UserProfile

class RegistrationForm(forms.ModelForm):
    confirm_password = forms.CharField(
        widget=forms.PasswordInput(),
        label="Подтвердите пароль"
    )

    class Meta:
        model = UserProfile
        fields = ['email', 'name', 'surname', 'patronymic', 'password']
        widgets = {
            'password': forms.PasswordInput(),
        }
        labels = {
            'email': 'Email',
            'name': 'Имя',
            'surname': 'Фамилия',
            'patronymic': 'Отчество (необязательно)',
            'password': 'Пароль',
        }
        error_messages = {
            'email': {
                'unique': "Пользователь с таким email уже существует.",
            },
        }

    def clean_email(self):
        email = self.cleaned_data.get('email')
        try:
            validate_email(email)
        except ValidationError:
            raise forms.ValidationError("Введите корректный email адрес.")
        return email

    def clean(self):
        cleaned_data = super().clean()
        password = cleaned_data.get("password")
        confirm_password = cleaned_data.get("confirm_password")
        
        if password and confirm_password and password != confirm_password:
            self.add_error('confirm_password', "Пароли не совпадают")
        
        return cleaned_data
